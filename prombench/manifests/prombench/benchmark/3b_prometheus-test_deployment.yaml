apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus-test-pr-7214
  namespace: prombench-7214
  labels:
    app: prometheus
    prometheus: test-pr-7214
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prometheus
      prometheus: test-pr-7214
  template:
    metadata:
      namespace: prombench-7214
      labels:
        app: prometheus
        prometheus: test-pr-7214
    spec:
      serviceAccountName: prometheus
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - topologyKey: kubernetes.io/hostname
            labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - prometheus
      securityContext:
        runAsUser: 0
      initContainers:
      - name: prometheus-builder
        image: docker.io/prominfra/prometheus-builder:master
        env:
        - name: PR_NUMBER
          value: "7214"
        - name: VOLUME_DIR
          value: "/prometheus-builder" # same as mountPath
        - name: GITHUB_ORG
          value: "prometheus"
        - name: GITHUB_REPO
          value: "prometheus"
        volumeMounts:
        - name: prometheus-executable
          mountPath: /prometheus-builder
      containers:
      - name: prometheus
        image: quay.io/prometheus/busybox:latest
        imagePullPolicy: Always
        # The prometheus-builder takes a while to build
        # so make sure to start it before the release deployment.
        # Mark it ready only when prometheus is started.
        # This way we have the least time difference in the scraped metrics.
        readinessProbe:
          tcpSocket:
            port: 9090
          initialDelaySeconds: 30
          periodSeconds: 2
          failureThreshold: 30
        command: ["/usr/bin/prometheus"]
        args: [
          "--web.external-url=http://{{ .DOMAIN_NAME }}/7214/prometheus-pr",
          "--storage.tsdb.path=/prometheus",
          "--web.console.libraries=/usr/bin/console_libraries",
          "--web.console.templates=/usr/bin/consoles",
          "--config.file=/etc/prometheus/prometheus.yml",
          "--log.level=debug"
        ]
        volumeMounts:
        - name: config-volume
          mountPath: /etc/prometheus
        - name: instance-ssd
          mountPath: /prometheus
        - name: prometheus-executable
          mountPath: /usr/bin
        ports:
        - name: prom-web
          containerPort: 9090
      volumes:
      - name: config-volume
        configMap:
          name: prometheus-test
      - name: instance-ssd
        hostPath:
          path: /mnt/disks/ssd0 #gke ssds
      - name: prometheus-executable
        emptyDir: {}
      terminationGracePeriodSeconds: 300
      nodeSelector:
        cloud.google.com/gke-nodepool: prometheus-7214
        isolation: prometheus
---
apiVersion: v1
kind: Service
metadata:
  name: prometheus-test-pr-7214
  namespace: prombench-7214
  labels:
    app: prometheus
    prometheus: test-pr-7214
spec:
  ports:
  - name: prom-web
    port: 80
    targetPort: prom-web
  selector:
    app: prometheus
    prometheus: test-pr-7214

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus-test-v2-18-1
  namespace: prombench-7214
  labels:
    app: prometheus
    prometheus: test-v2-18-1
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prometheus
      prometheus: test-v2-18-1
  template:
    metadata:
      namespace: prombench-7214
      labels:
        app: prometheus
        prometheus: test-v2-18-1
    spec:
      serviceAccountName: prometheus
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - topologyKey: kubernetes.io/hostname
            labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - prometheus
      securityContext:
        runAsUser: 0
      containers:
      - name: prometheus
        image: quay.io/prometheus/prometheus:v2-18-1
        imagePullPolicy: Always
        command: [ "/bin/prometheus" ]
        args: [
          "--web.external-url=http://{{ .DOMAIN_NAME }}/7214/prometheus-release",
          "--storage.tsdb.path=/prometheus",
          "--web.console.libraries=/etc/prometheus/console_libraries",
          "--web.console.templates=/etc/prometheus/consoles",
          "--config.file=/etc/prometheus/prometheus.yml",
          "--log.level=debug"
        ]
        volumeMounts:
        - name: config-volume
          mountPath: /etc/prometheus
        - name: instance-ssd
          mountPath: /prometheus
        ports:
        - name: prom-web
          containerPort: 9090
      volumes:
      - name: config-volume
        configMap:
          name: prometheus-test
      - name: instance-ssd
        hostPath:
          # /mnt is where GKE keeps it's SSD
          # don't change this if you want Prometheus to take advantage of these local SSDs
          path: /mnt/disks/ssd0
      terminationGracePeriodSeconds: 300
      nodeSelector:
        cloud.google.com/gke-nodepool: prometheus-7214
        isolation: prometheus
---
apiVersion: v1
kind: Service
metadata:
  name: prometheus-test-v2-18-1
  namespace: prombench-7214
  labels:
    app: prometheus
    prometheus: test-v2-18-1
spec:
  ports:
  - name: prom-web
    port: 80
    targetPort: prom-web
  selector:
    app: prometheus
    prometheus: test-v2-18-1
